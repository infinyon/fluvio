/// WARNING: CODE GENERATED FILE
/// * This file is generated by kfspec2code.
/// * Any changes applied to this file will be lost when a new spec is generated.
use serde::{Deserialize, Serialize};

use kf_protocol_api::ErrorCode;
use kf_protocol_api::Request;

use kf_protocol_derive::Decode;
use kf_protocol_derive::Encode;
use kf_protocol_derive::KfDefault;

// -----------------------------------
// KfFindCoordinatorRequest
// -----------------------------------

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct KfFindCoordinatorRequest {
    /// The coordinator key.
    pub key: String,

    /// The coordinator key type.  (Group, transaction, etc.)
    #[fluvio_kf(min_version = 1)]
    pub key_type: i8,
}

// -----------------------------------
// KfFindCoordinatorResponse
// -----------------------------------

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct KfFindCoordinatorResponse {
    /// The duration in milliseconds for which the request was throttled due to a quota violation,
    /// or zero if the request did not violate any quota.
    #[fluvio_kf(min_version = 1, ignorable)]
    pub throttle_time_ms: i32,

    /// The error code, or 0 if there was no error.
    pub error_code: ErrorCode,

    /// The error message, or null if there was no error.
    #[fluvio_kf(min_version = 1, ignorable)]
    pub error_message: Option<String>,

    /// The node id.
    pub node_id: i32,

    /// The host name.
    pub host: String,

    /// The port.
    pub port: i32,
}

// -----------------------------------
// Implementation - KfFindCoordinatorRequest
// -----------------------------------

impl Request for KfFindCoordinatorRequest {
    const API_KEY: u16 = 10;

    const MIN_API_VERSION: i16 = 0;
    const MAX_API_VERSION: i16 = 2;
    const DEFAULT_API_VERSION: i16 = 2;

    type Response = KfFindCoordinatorResponse;
}
