/// WARNING: CODE GENERATED FILE
/// * This file is generated by kfspec2code.
/// * Any changes applied to this file will be lost when a new spec is generated.
use serde::{Deserialize, Serialize};

use kf_protocol_api::ErrorCode;
use kf_protocol_api::Request;

use kf_protocol_derive::Decode;
use kf_protocol_derive::Encode;
use kf_protocol_derive::KfDefault;

// -----------------------------------
// KfControlledShutdownRequest
// -----------------------------------

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct KfControlledShutdownRequest {
    /// The id of the broker for which controlled shutdown has been requested.
    pub broker_id: i32,

    /// The broker epoch.
    #[fluvio_kf(min_version = 2, ignorable)]
    pub broker_epoch: i64,
}

// -----------------------------------
// KfControlledShutdownResponse
// -----------------------------------

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct KfControlledShutdownResponse {
    /// The top-level error code.
    pub error_code: ErrorCode,

    /// The partitions that the broker still leads.
    pub remaining_partitions: Vec<RemainingPartition>,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct RemainingPartition {
    /// The name of the topic.
    pub topic_name: String,

    /// The index of the partition.
    pub partition_index: i32,
}

// -----------------------------------
// Implementation - KfControlledShutdownRequest
// -----------------------------------

impl Request for KfControlledShutdownRequest {
    const API_KEY: u16 = 7;

    const MIN_API_VERSION: i16 = 0;
    const MAX_API_VERSION: i16 = 2;
    const DEFAULT_API_VERSION: i16 = 2;

    type Response = KfControlledShutdownResponse;
}
