/// WARNING: CODE GENERATED FILE
/// * This file is generated by kfspec2code.
/// * Any changes applied to this file will be lost when a new spec is generated.
use serde::{Deserialize, Serialize};

use kf_protocol_api::ErrorCode;
use kf_protocol_api::Request;

use kf_protocol_derive::Decode;
use kf_protocol_derive::Encode;
use kf_protocol_derive::KfDefault;

// -----------------------------------
// KfDescribeDelegationTokenRequest
// -----------------------------------

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct KfDescribeDelegationTokenRequest {
    /// Each owner that we want to describe delegation tokens for, or null to describe all tokens.
    pub owners: Option<Vec<DescribeDelegationTokenOwner>>,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct DescribeDelegationTokenOwner {
    /// The owner principal type.
    pub principal_type: String,

    /// The owner principal name.
    pub principal_name: String,
}

// -----------------------------------
// KfDescribeDelegationTokenResponse
// -----------------------------------

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct KfDescribeDelegationTokenResponse {
    /// The error code, or 0 if there was no error.
    pub error_code: ErrorCode,

    /// The tokens.
    pub tokens: Vec<DescribedDelegationToken>,

    /// The duration in milliseconds for which the request was throttled due to a quota violation,
    /// or zero if the request did not violate any quota.
    pub throttle_time_ms: i32,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct DescribedDelegationToken {
    /// The token principal type.
    pub principal_type: String,

    /// The token principal name.
    pub principal_name: String,

    /// The token issue timestamp in milliseconds.
    pub issue_timestamp: i64,

    /// The token expiry timestamp in milliseconds.
    pub expiry_timestamp: i64,

    /// The token maximum timestamp length in milliseconds.
    pub max_timestamp: i64,

    /// The token ID.
    pub token_name: String,

    /// The token HMAC.
    pub hmac: Vec<u8>,

    /// Those who are able to renew this token before it expires.
    pub renewers: Vec<DescribedDelegationTokenRenewer>,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct DescribedDelegationTokenRenewer {
    /// The renewer principal type
    pub principal_type: String,

    /// The renewer principal name
    pub principal_name: String,
}

// -----------------------------------
// Implementation - KfDescribeDelegationTokenRequest
// -----------------------------------

impl Request for KfDescribeDelegationTokenRequest {
    const API_KEY: u16 = 41;

    const MIN_API_VERSION: i16 = 0;
    const MAX_API_VERSION: i16 = 1;
    const DEFAULT_API_VERSION: i16 = 1;

    type Response = KfDescribeDelegationTokenResponse;
}
