/// WARNING: CODE GENERATED FILE
/// * This file is generated by kfspec2code.
/// * Any changes applied to this file will be lost when a new spec is generated.
use serde::{Deserialize, Serialize};

use kf_protocol_api::ErrorCode;
use kf_protocol_api::Request;

use kf_protocol_derive::Decode;
use kf_protocol_derive::Encode;
use kf_protocol_derive::KfDefault;

// -----------------------------------
// KfDeleteRecordsRequest
// -----------------------------------

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct KfDeleteRecordsRequest {
    /// Each topic that we want to delete records from.
    pub topics: Vec<DeleteRecordsTopic>,

    /// How long to wait for the deletion to complete, in milliseconds.
    pub timeout_ms: i32,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct DeleteRecordsTopic {
    /// The topic name.
    pub name: String,

    /// Each partition that we want to delete records from.
    pub partitions: Vec<DeleteRecordsPartition>,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct DeleteRecordsPartition {
    /// The partition index.
    pub partition_index: i32,

    /// The deletion offset.
    pub offset: i64,
}

// -----------------------------------
// KfDeleteRecordsResponse
// -----------------------------------

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct KfDeleteRecordsResponse {
    /// The duration in milliseconds for which the request was throttled due to a quota violation,
    /// or zero if the request did not violate any quota.
    pub throttle_time_ms: i32,

    /// Each topic that we wanted to delete records from.
    pub topics: Vec<DeleteRecordsTopicResult>,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct DeleteRecordsTopicResult {
    /// The topic name.
    pub name: String,

    /// Each partition that we wanted to delete records from.
    pub partitions: Vec<DeleteRecordsPartitionResult>,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct DeleteRecordsPartitionResult {
    /// The partition index.
    pub partition_index: i32,

    /// The partition low water mark.
    pub low_watermark: i64,

    /// The deletion error code, or 0 if the deletion succeeded.
    pub error_code: ErrorCode,
}

// -----------------------------------
// Implementation - KfDeleteRecordsRequest
// -----------------------------------

impl Request for KfDeleteRecordsRequest {
    const API_KEY: u16 = 21;

    const MIN_API_VERSION: i16 = 0;
    const MAX_API_VERSION: i16 = 1;
    const DEFAULT_API_VERSION: i16 = 1;

    type Response = KfDeleteRecordsResponse;
}
