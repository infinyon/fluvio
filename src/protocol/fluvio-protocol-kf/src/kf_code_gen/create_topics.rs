/// WARNING: CODE GENERATED FILE
/// * This file is generated by kfspec2code.
/// * Any changes applied to this file will be lost when a new spec is generated.
use serde::{Deserialize, Serialize};

use kf_protocol_api::ErrorCode;
use kf_protocol_api::Request;

use kf_protocol_derive::Decode;
use kf_protocol_derive::Encode;
use kf_protocol_derive::KfDefault;

// -----------------------------------
// KfCreateTopicsRequest
// -----------------------------------

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct KfCreateTopicsRequest {
    /// The topics to create.
    pub topics: Vec<CreatableTopic>,

    /// How long to wait in milliseconds before timing out the request.
    pub timeout_ms: i32,

    /// If true, check that the topics can be created as specified, but don't create anything.
    #[fluvio_kf(min_version = 1)]
    pub validate_only: bool,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct CreatableTopic {
    /// The topic name.
    pub name: String,

    /// The number of partitions to create in the topic, or -1 if we are specifying a manual
    /// partition assignment.
    pub num_partitions: i32,

    /// The number of replicas to create for each partition in the topic, or -1 if we are specifying
    /// a manual partition assignment.
    pub replication_factor: i16,

    /// The manual partition assignment, or the empty array if we are using automatic assignment.
    pub assignments: Vec<CreatableReplicaAssignment>,

    /// The custom topic configurations to set.
    pub configs: Vec<CreateableTopicConfig>,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct CreatableReplicaAssignment {
    /// The partition index.
    pub partition_index: i32,

    /// The brokers to place the partition on.
    pub broker_ids: Vec<i32>,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct CreateableTopicConfig {
    /// The configuration name.
    pub name: String,

    /// The configuration value.
    pub value: Option<String>,
}

// -----------------------------------
// KfCreateTopicsResponse
// -----------------------------------

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct KfCreateTopicsResponse {
    /// The duration in milliseconds for which the request was throttled due to a quota violation,
    /// or zero if the request did not violate any quota.
    #[fluvio_kf(min_version = 2, ignorable)]
    pub throttle_time_ms: i32,

    /// Results for each topic we tried to create.
    pub topics: Vec<CreatableTopicResult>,
}

#[derive(Encode, Decode, Serialize, Deserialize, KfDefault, Debug)]
pub struct CreatableTopicResult {
    /// The topic name.
    pub name: String,

    /// The error code, or 0 if there was no error.
    pub error_code: ErrorCode,

    /// The error message, or null if there was no error.
    #[fluvio_kf(min_version = 1, ignorable)]
    pub error_message: Option<String>,
}

// -----------------------------------
// Implementation - KfCreateTopicsRequest
// -----------------------------------

impl Request for KfCreateTopicsRequest {
    const API_KEY: u16 = 19;

    const MIN_API_VERSION: i16 = 0;
    const MAX_API_VERSION: i16 = 3;
    const DEFAULT_API_VERSION: i16 = 3;

    type Response = KfCreateTopicsResponse;
}
