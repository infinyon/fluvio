[package]
name = "fluvio-spu"
edition = "2018"
version = "0.5.0"
authors = ["fluvio.io"]
description = "Fluvio Stream Processing Unit"
repository = "https://github.com/infinyon/fluvio"
license = "Apache-2.0"

[lib]
name = "fluvio_spu"
path = "src/lib.rs"

[[bin]]
name = "fluvio-spu"
path = "src/main.rs"
doc = false

[dependencies]
log = "0.4.8"
cfg-if = "1.0.0"
anyhow = "1.0.38"
tracing = "0.1.14"
tracing-futures = "0.2.4"
bytes = "1.0.0"
structopt = "0.3.5"
toml = "0.5.5"
futures-util = { version = "0.3.5", features = ["sink"] }
async-trait = "0.1.21"
serde_yaml = "0.8.8"
serde = { version = "1.0.103", features = ['derive'] }
chrono = { version = "0.4.6", features = ["serde"] }
dashmap = "4.0.2"
pin-utils = "0.1.0-alpha.4"
regex = "1.3.1"
tokio = { version = "1.3.0", features = ["macros"] }
async-channel = "1.5.1"
async-rwlock = "1.1.0"
async-mutex = "1.4.0"
event-listener = "2.4.0"
async-io = "1.3.1"
wasmtime = "0.25.0"
nix = "0.20.0"

# Fluvio dependencies
fluvio-types = { version = "0.2.3", features = ["events"], path = "../types" }
fluvio-storage = { version = "0.4.0", path = "../storage" }
fluvio-controlplane = { version = "0.6.0", path = "../controlplane" }
fluvio-controlplane-metadata = { version = "0.7.0", path = "../controlplane-metadata" }
fluvio-spu-schema = { version = "0.5.1", path = "../spu-schema" }
fluvio-protocol = { path = "../protocol", version = "0.4.0" }
dataplane = { version = "0.4.0", path = "../dataplane-protocol", package = "fluvio-dataplane-protocol" }
fluvio-socket = { path = "../socket", version = "0.7.0" }
fluvio-service = { path = "../service", version = "0.5.1" }
flv-tls-proxy = { version = "0.4.0" }
flv-util = { version = "0.5.0" }
fluvio-future = { version = "0.2.0", features = ["subscriber", "openssl_tls"] }


[dev-dependencies]
flv-util = { version = "0.5.2", features = ["fixture"] }
fluvio-future = { version = "0.2.0", features = ["fixture", "subscriber"] }
dataplane = { version = "0.4.1", path = "../dataplane-protocol", package = "fluvio-dataplane-protocol", features = ["fixture"] }