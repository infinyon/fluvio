# This workflow test deployment of latest dev release
name:  CD_Dev_Mac

permissions:
  contents: read

concurrency: 
  group: cd_dev_mac
  cancel-in-progress: true

on:
#  push:
#    branches: [master]
#  pull_request:
#    branches: [master]
#  workflow_run:
#    workflows: [Publish]
#    branches: [master]
#    types: [completed]
  workflow_dispatch:
    inputs:
      verbose:
        description: "Set --verbose to get verbose build output"
        required: false
        default: ""


env:
  USE_VERSION: ${{ github.event.inputs.alt_version }}
  K3D_VERSION: v5.4.1

jobs:
  # Perform E2E sanity checks
  verify_latest_releases:
    name: Verify latest run ${{ matrix.run }} (${{ matrix.cluster_type }}) on (${{ matrix.os }}),
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12]
        cluster_type: [local,k8]
        run: [r1]
    env:
      SLEEP: 10
      TOPIC: foobar
    steps:
      - uses: actions/checkout@v3
      - name: Set up K3d for Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | TAG=${{ env.K3D_VERSION }} bash
      - name: Set up K8 for ubuntu(kind)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: ./k8-util/cluster/reset-k3d.sh
      - name: Install Docker for Mac
        if: ${{ matrix.os == 'macos-12' }}
        uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 5
      - name: Set up Kind for Mac
        if: ${{ matrix.os == 'macos-12' }}
        run: |
          brew install kind
          kind create cluster --config k8-util/cluster/kind.yaml
      - name: Install Fluvio CLI
        run: |
          curl -fsS https://packages.fluvio.io/v1/install.sh | VERSION=latest bash
          echo "$HOME/.fluvio/bin" >> $GITHUB_PATH
      - name: Install Local Fluvio cluster
        timeout-minutes: 3
        if: ${{ matrix.cluster_type == 'local' }}
        run: fluvio cluster start --local
      - name: Install k8 Fluvio cluster
        timeout-minutes: 3
        if: ${{ matrix.cluster_type == 'k8' }}
        run: |
          if [[ ${{ matrix.os }} == 'macos-12' ]]; then
              export PROXY="--proxy-addr  127.0.0.1"
            else
              export PROXY=""
          fi
          fluvio cluster start  --spu-storage-size 1 --image-version latest $PROXY
      - name: Run E2E Test
        timeout-minutes: 2
        run: |
            date +"%Y-%m-%dT%H:%M:%S%z"
            fluvio version
            fluvio topic create ${{ env.TOPIC }}
            # wait for topic to be created
            sleep ${{ env.SLEEP }}
            date +"%Y-%m-%dT%H:%M:%S%z"
            echo foo | fluvio produce ${{ env.TOPIC }}
            fluvio consume ${{ env.TOPIC }} -o 0 -d | grep -F -w "foo"
            # Delete the topic afterword but this looks to not work right now.
            # fluvio topic delete "${{ env.TOPIC }}"

      - name: Run diagnostics
        if: ${{ !success() }}
        timeout-minutes: 5
        run: fluvio cluster diagnostics
      - name: Upload diagnostics
        uses: actions/upload-artifact@v3
        timeout-minutes: 5
        if: ${{ !success() }}
        with:
          name: cd_failure_${{ matrix.run }}_${{ matrix.cluster_type }}
          path: diagnostics*.gz


