name: Release

on:
#  push:
#    # Sequence of patterns matched against refs/tags
#    tags:
#      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:
    inputs:
      force:
        required: false
        description: 'Force push this release'
      update_script:
        description: 'Whether to update the install.sh script'
        required: false

jobs:
  publish_fluvio_cli:
    name: Publish Fluvio CLI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]
    steps:
      - name: Set Force Release env
        run: |
          echo "FORCE_RELEASE=${{ github.event.inputs.force }}"
          echo "FORCE_RELEASE=${{ github.event.inputs.force }}" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1
        with:
          version: '0.32.9'

      - name: install musl-tools
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update;
          sudo apt-get install -y musl-tools build-essential;

      - name: Build and upload release to github
        run: cargo make -l verbose --profile production github-release-upload
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_RELEASE }}

      # Set AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
      - name: Set test env
        if: ${{ github.event.inputs.test != '' }}
        run: |
          echo "::set-env name=AWS_ACCESS_KEY_ID::${{ secrets.PACKAGE_TEST_AWS_ACCESS_KEY_ID }}"
          echo "::set-env name=AWS_SECRET_ACCESS_KEY::${{ secrets.PACKAGE_TEST_AWS_SECRET_ACCESS_KEY }}"
      - name: Set prod env
        if: ${{ github.event.inputs.test == '' }}
        run: |
          echo "::set-env name=AWS_ACCESS_KEY_ID::${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "::set-env name=AWS_SECRET_ACCESS_KEY::${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Build and publish using fluvio-packages
        run: cargo make -l verbose --profile production publish-fluvio

      - name: Update fluvio install.sh
        if: ${{ startsWith(matrix.os, 'ubuntu') && github.event.inputs.update_script != '' }}
        run: cargo make -l verbose --profile production s3-upload-installer

  # Bump the latest version of the Fluvio CLI on the package registry
  # This must be a distinct job than publish_fluvio_cli because this job requires
  # that all targets are first published successfully before we can bump the version.
  bump_fluvio_cli:
    name: Bump Fluvio CLI version
    needs: publish_fluvio_cli
    runs-on: ubuntu-latest
    steps:
      # Set AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
      - name: Set test env
        if: ${{ github.event.inputs.test != '' }}
        run: |
          echo "::set-env name=AWS_ACCESS_KEY_ID::${{ secrets.PACKAGE_TEST_AWS_ACCESS_KEY_ID }}"
          echo "::set-env name=AWS_SECRET_ACCESS_KEY::${{ secrets.PACKAGE_TEST_AWS_SECRET_ACCESS_KEY }}"
      - name: Set prod env
        if: ${{ github.event.inputs.test == '' }}
        run: |
          echo "::set-env name=AWS_ACCESS_KEY_ID::${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "::set-env name=AWS_SECRET_ACCESS_KEY::${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Bump release version of Fluvio CLI using fluvio-packages
        run: |
          export FLUVIO_VERSION="$(cat VERSION)+$(git rev-parse HEAD)"
          echo "Using Fluvio version ${FLUVIO_VERSION}"
          cargo make bump-fluvio

# TODO: Fix the pi build
#  release_fluvio_pi:
#    name: Raspberry Pi Release
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set Force Release env
#        run: |
#          if [ "${{ github.event.inputs.force }}" = "--force" ]; then
#            echo "GITHUB_RELEASE_FORCE=--replace" >> $GITHUB_ENV
#          else
#            echo "GITHUB_RELEASE_FORCE=''" >> $GITHUB_ENV
#          fi
#          echo "FORCE_RELEASE=${{ github.event.inputs.force }}"
#          echo "FORCE_RELEASE=${{ github.event.inputs.force }}" >> $GITHUB_ENV
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Install cargo-make
#        uses: davidB/rust-cargo-make@v1
#        with:
#          version: '0.32.9'
#      - name: Build and upload pi release to github
#        run: cargo make -l verbose pi-github-release-upload
#        env:
#          GITHUB_TOKEN: ${{ secrets.ACTION_RELEASE }}

  release_docker:
    name: docker release
    runs-on: ubuntu-latest
    steps:
      - name: install musl-tools
        run: |
          sudo apt-get update;
          sudo apt-get install -y musl-tools build-essential;
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Release docker
        run: |
          export TARGET_CC=musl-gcc
          docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
          make release_image

      - name: Release helm chart
        run: |
          make helm-install-plugin
          helm repo add fluvio https://gitops:${{ secrets.HELM_PASSWORD }}@charts.fluvio.io
          make helm-publish-sys
          make helm-publish-app
