name: Release

permissions:
  contents: read

on:
  workflow_dispatch:

jobs:
  release_docker:
    name: Release Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker
        run: docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
      - name: Tag and push release image
        run: |
          export VERSION="$(curl -fsS https://raw.githubusercontent.com/infinyon/fluvio/${{ github.sha }}/VERSION)"
          export LATEST_TAG="infinyon/fluvio:${VERSION}-${{ github.sha }}"
          export RELEASE_TAG="infinyon/fluvio:${VERSION}"
          docker pull "${LATEST_TAG}"
          docker tag "${LATEST_TAG}" "${RELEASE_TAG}"
          docker push "${RELEASE_TAG}"

  # Publish the release Helm chart, tagged with the release VERSION.
  # Example tag: 0.7.4
  # This job requires the docker image step to have completed successfully.
  release_helm:
    name: Release Helm Chart
    needs: release_docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Helm
        env:
          HELM_VERSION: v3.3.4
          OS: ubuntu-latest
        run: actions/ci-replace-helm.sh
      - name: Publish helm charts
        run: |
          export VERSION="$(curl -fsS https://raw.githubusercontent.com/infinyon/fluvio/${{ github.sha }}/VERSION)"
          helm plugin install https://github.com/chartmuseum/helm-push.git
          helm repo add chartmuseum https://gitops:${{ secrets.HELM_PASSWORD }}@charts.fluvio.io
          helm push k8-util/helm/fluvio-sys --version="${VERSION}-$(git rev-parse HEAD)" chartmuseum
          helm push k8-util/helm/fluvio-app --version="${VERSION}-$(git rev-parse HEAD)" chartmuseum

  release_fluvio:
    name: Release Fluvio CLI
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Login GH CLI
        run: gh auth login --with-token < <(echo ${{ secrets.GITHUB_TOKEN }})

      - name: Download fluvio x86_64-unknown-linux-musl
        run: |
          mkdir -p target/x86_64-unknown-linux-musl/release/
          gh release download dev -R infinyon/fluvio \
            -n "fluvio-x86_64-unknown-linux-musl" \
            -D target/x86_64-unknown-linux-musl/release/

      - name: Download fluvio x86_64-apple-darwin
        run: |
          mkdir -p target/x86_64-apple-darwin/release/
          gh release download dev -R infinyon/fluvio \
            -n "fluvio-x86_64-apple-darwin" \
            -D target/x86_64-apple-darwin/release/

      - name: Install fluvio-package
        run: |
          curl -fsS https://packages.fluvio.io/v1/install.sh | bash
          ${HOME}/.fluvio/bin/fluvio install fluvio-package

      - name: Publish to Fluvio Packages
        run: |
          export VERSION="$(curl -fsS https://raw.githubusercontent.com/infinyon/fluvio/${{ github.sha }}/VERSION)"
          ${HOME}/.fluvio/bin/fluvio package publish \
            --force \
            --version="${VERSION}" \
            target/x86_64-unknown-linux-musl/release/fluvio \
            target/x86_64-apple-darwin/release/fluvio

  bump_stable_fluvio:
    name: Bump stable Fluvio
    needs: [release_docker, release_helm, release_fluvio]
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Install fluvio-package
        run: |
          curl -fsS https://packages.fluvio.io/v1/install.sh | bash
          ${HOME}/.fluvio/bin/fluvio install fluvio-package

      - name: Bump Fluvio CLI
        run: |
          export VERSION="$(curl -fsS https://raw.githubusercontent.com/infinyon/fluvio/${{ github.sha }}/VERSION)"
          ${HOME}/.fluvio/bin/fluvio package bump dynamic "${VERSION}"

      # Enable this when we are confident in the workflow
#      - name: Bump stable branch
#        run: |
#          git checkout stable
#          git rebase origin/master
#          git push origin stable
