name: Unstable CI

permissions:
  contents: read

on:
  pull_request:
    branches: [master]
  workflow_dispatch:
    inputs:
      verbose:
        description: "Set --verbose to get verbose build output"
        required: false
        default: ''

env:
  VERBOSE: ${{ github.events.input.verbose }}

jobs:
  cancel_previous_runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  # Since this runs on custom runner, no need to control sc-cache
  integration_test_linux:
    name: Integration test Linux
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [infinyon-ubuntu-bionic]
        rust: [stable]
    env:
      FLV_SOCKET_WAIT: 600
    steps:
      - uses: actions/checkout@v2
      - name: Install ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      - name: Run integration tests
        run:  make run-unstable-test
        timeout-minutes: 10

  unstable_test_mac:
      name: Unstable Integration test Mac
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: [macos-latest]
          rust: [stable]
          include:
            - os: macos-latest
              sccache-path: /Users/runner/Library/Caches/Mozilla.sccache
              target: x86_64-apple-darwin
          task:
            - name: Run integration tests
              run: make run-unstable-test
              timeout-minutes: 20
      env:
        RUST_BACKTRACE: full
        RUSTC_WRAPPER: sccache
        RUSTV: ${{ matrix.rust }}
        SCCACHE_CACHE_SIZE: 2G
        SCCACHE_DIR: ${{ matrix.sccache-path }}
        # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
      steps:
        - uses: actions/checkout@v2
        - name: Install sccache (macos-latest)
          run: |
            brew update
            brew install sccache
        - name: Install Rust ${{ matrix.rust }}
          uses: actions-rs/toolchain@v1
          with:
            toolchain: ${{ matrix.rust }}
            profile: minimal
            override: true
        - name: Cache cargo registry
          uses: actions/cache@v2
          continue-on-error: false
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            restore-keys: |
              ${{ runner.os }}-cargo-
        - name: Save sccache
          uses: actions/cache@v2
          continue-on-error: false
          with:
            path: ${{ matrix.sccache-path }}
            key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
            restore-keys: |
              ${{ runner.os }}-sccache-
        - name: Start sccache server
          run: sccache --start-server
        - name: ${{ matrix.task.name }}
          run: ${{ matrix.task.run }}
        - name: Stop sccache server
          run: sccache --stop-server || true
