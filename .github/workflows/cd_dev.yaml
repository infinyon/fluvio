# This workflow test deployment of latest dev release
name:  CD_Dev

permissions:
  contents: read

concurrency: 
  group: ${{ 'cd_dev' }}
  cancel-in-progress: true

on:
#  push:
#    branches: [master]
#  pull_request:
#    branches: [master]
  workflow_run:
    workflows: [Publish]
    branches: [master]
    types: [completed]
  workflow_dispatch:

jobs:
  # test fluvio in local cluster 
  verify_releases:
    name: Verify latest (${{ matrix.cluster_type }}) on (${{ matrix.os }}), 
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        cluster_type: [local,k8]
        fluvio_version: [latest]
    env:
      SLEEP: 10
      TOPIC: foobar
    steps:
      - uses: actions/checkout@v2
      - name: Install Minikube for Github runner
        uses: manusa/actions-setup-minikube@v2.4.2
        with:
          minikube version: "v1.22.0"
          kubernetes version: "v1.21.2"
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker
      - name: Install Fluvio Local Cluster
        uses: ./
        with:
          version: ${{ matrix.fluvio_version }}
          cluster-type: ${{ matrix.cluster_type }}
      - name: Fluvio command test
        run: |
          fluvio version
          sleep ${{ env.SLEEP }}
          fluvio topic list
          sleep ${{ env.SLEEP }}
          fluvio topic create ${{ env.TOPIC }}
          sleep ${{ env.SLEEP }}
          echo foo | fluvio produce ${{ env.TOPIC }}
          sleep ${{ env.SLEEP }}
          fluvio consume ${{ env.TOPIC }} -o 0 -d
          # Delete the topic afterword but this looks to not work right now.
          # fluvio topic delete "${{ env.TOPIC }}"

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        if: failure()
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}



  # Perform upgrade test from previous stable version to latest
  k8_cluster_upgrade:
    name: Kubernetes cluster upgrade test
    if: false
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]

    env:
      FLV_SOCKET_WAIT: 600
      FLV_CLUSTER_MAX_SC_VERSION_LOOP: 120
      FLV_CLUSTER_MAX_SC_NETWORK_LOOP: 60
      FLV_TEST_CONSUMER_WAIT: 300000
      RUSTV: ${{ matrix.rust }}
      TARGET: x86_64-unknown-linux-musl
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
      - uses: actions/checkout@v2
      - run: helm version

      - name: Install Minikube for Github runner
        if: matrix.os == 'ubuntu-latest'
        uses: manusa/actions-setup-minikube@v2.4.2
        with:
          minikube version: "v1.22.0"
          kubernetes version: "v1.21.2"
      - name: Setup Minikube for Linux
        if: startsWith(matrix.os, 'infinyon-ubuntu')
        run: |
          minikube delete
          minikube start --driver=docker --kubernetes-version 1.21.2
      - name: Test minikube
        run: |
          minikube profile list
          minikube status
      - name: Setup for upgrade test
        run: |
          curl -fsS https://packages.fluvio.io/v1/install.sh | bash

      - name: Run upgrade test
        env:
          TEST_DATA_BYTES: 10000
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 45
          max_attempts: 3
          command: |
            export PATH=~/.fluvio/bin:$PATH
            USE_LATEST=true make upgrade-test

      - name: Clean minikube
        run: |
          minikube delete

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        if: failure()
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}