name: Publish

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      installer_version:
        required: false # Is this required if I have a default?
        description: "The version of Fluvio to download with install.sh"
        default: "stable"
  workflow_call:
    inputs:
      installer_version:
        required: false
        type: string
        description: "The version of Fluvio to download with install.sh"
        default: "stable"

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RELEASE: true # Needed so `make` targets make public changes

jobs:
  # Re-tag the docker image for this commit as 'latest'
  docker:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Publish latest development Fluvio Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: make docker-push-manifest-dev
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        if: failure()
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}

  # Download the `fluvio` release artifact for each target and publish them to packages.fluvio.io
  fluvio:
    name: Publish Fluvio CLI
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install fluvio-package
        env:
          CHANNEL_TAG: stable # We want to ensure we install the stable version of CLI
        run: |
          if [ -n "${{ github.event.inputs.installer_version }}" ]; then
              export VERSION=${{ github.event.inputs.installer_version }}
          else
              export VERSION=stable
          fi

          echo "VERSION=$VERSION"
          make curl-install-fluvio
          make install-fluvio-package

      - name: Download dev release
        run: make download-fluvio-release

      - name: Publish artifacts
        env:
          FLUVIO_BIN: ~/.fluvio/bin/fluvio
        run: make publish-artifacts-dev
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        if: failure()
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}

  # Bump the latest version of the Fluvio CLI on the package registry
  # This serves as the final step in the publishing process, and therefore
  # depends on all other jobs to have completed successfully.
  # If the 'latest' tag gets bumped, you can be sure the whole publish flow succeeded.
  bump_fluvio:
    name: Bump Fluvio CLI version
    needs: [docker, fluvio]
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install stable Fluvio CLI
        env:
          CHANNEL_TAG: stable
        run: |
          make curl-install-fluvio

      - name: Bump latest version of Fluvio CLI with fluvio-packages
        env:
          FLUVIO_BIN: ~/.fluvio/bin/fluvio
        run: make bump-fluvio-latest

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        if: ${{ !success() }}
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
