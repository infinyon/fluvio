# CI for Tier2 platforms
# This should not block CI or Release

name: CI-Tier2

permissions:
  contents: read

on:
  pull_request:
    branches: [master]
  workflow_dispatch:
    inputs:
      verbose:
        description: "Set --verbose to get verbose build output"
        required: false
        default: ""

env:
  VERBOSE: ${{ github.events.input.verbose }}

jobs:
  cancel_previous_runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  build_checks:
    name: ${{ matrix.task.name }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        rust: [stable]
        task:
          - name: Doc tests
            run: make run-all-doc-test
        include:
          - os: macos-latest
            rust: stable
            sccache-path: /Users/runner/Library/Caches/Mozilla.sccache
            target: x86_64-apple-darwin
            task:
              name: Clippy
              run: make check-clippy
          - os: macos-latest
            sccache-path: /Users/runner/Library/Caches/Mozilla.sccache
            target: x86_64-apple-darwin
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      RUSTV: ${{ matrix.rust }}
      TARGET: ${{ matrix.target }}
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
      - uses: actions/checkout@v2
      - name: Install sccache (macos-latest)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install sccache

      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      - name: Install zig & lld for MacOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install zig && \
          brew install llvm@11 && \
          echo "FLUVIO_BUILD_LLD=/usr/local/opt/llvm@11/bin/lld" | tee -a $GITHUB_ENV
      - name: Cache cargo registry and sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ${{ matrix.sccache-path }}
          key: ${{ runner.os }}-cargo-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-sccache-

      - name: Start sccache server
        run: sccache --start-server

      # Main run step: Run task from matrix
      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.run }}

      - name: Stop sccache server
        run: sccache --stop-server || true

  build_platform:
    name: Build Platform (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        rust: [stable]
        task:
          - os: macos-latest
            sccache-path: /Users/runner/Library/Caches/Mozilla.sccache
            target: x86_64-apple-darwin
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      RUSTV: ${{ matrix.rust }}
      TARGET: ${{ matrix.target }}
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
      - uses: actions/checkout@v2

      # If this job is being run by Bors (it was pushed to staging),
      # then build and run in release mode
      - name: Install sccache (macos-latest)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install sccache

      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      - name: Install zig & lld for MacOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install zig && \
          brew install llvm@11 && \
          echo "FLUVIO_BUILD_LLD=/usr/local/opt/llvm@11/bin/lld" | tee -a $GITHUB_ENV
      - name: Cache cargo registry and sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ${{ matrix.sccache-path }}
          key: ${{ runner.os }}-cargo-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-sccache-

      - name: Start sccache server
        run: sccache --start-server

      - name: Build artifacts
        run: make build-cli build-cluster build-test

      - name: Unit tests
        run: make run-all-unit-test

      - name: Stop sccache server
        run: sccache --stop-server || true
