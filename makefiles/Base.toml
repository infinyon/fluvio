[env.development]
CARGO_PROFILE = "dev"

[env.production]
CARGO_PROFILE = "release"

[tasks.set-image-tag]
env = { IMAGE_TAG = "${CARGO_MAKE_GIT_HEAD_LAST_COMMIT_HASH}-${CARGO_PROFILE}" }

################################################################################
# Tasks for building targets matching the build host
#

[tasks.build-dev.mac]
extend = "build-dev-mac"
[tasks.build-dev.linux]
extend = "build-dev-musl"

[tasks.build-prod.mac]
extend = "build-prod-mac"
[tasks.build-prod.linux]
extend = "build-prod-musl"


################################################################################
# Building for x86_64-apple-darwin can only be done on Mac
#

[tasks.build-dev-mac.mac]
script = """
cargo build --bin fluvio --target=x86_64-apple-darwin
cargo build --bin fluvio-run --target=x86_64-apple-darwin
"""

[tasks.build-prod-mac.mac]
script ="""
cargo build --bin fluvio --release --target=x86_64-apple-darwin
cargo build --bin fluvio-run --release --target=x86_64-apple-darwin
"""

# Fail apple-darwin build on linux
[tasks.build-dev-mac.linux]
script = "echo Cannot build for Mac from Linux && false"
[tasks.build-prod-mac.linux]
script = "echo Cannot build for Mac from Linux && false"


################################################################################
# Building linux-musl on Linux requires setting up musl-gcc toolchain
#

[tasks.build-dev-musl.linux]
dependencies = ["setup-musl"]
script = """
cargo build --bin fluvio --target=x86_64-unknown-linux-musl
cargo build --bin fluvio-run --target=x86_64-unknown-linux-musl
"""

[tasks.build-prod-musl.linux]
dependencies = ["setup-musl"]
script = """
cargo build --release --bin fluvio --target=x86_64-unknown-linux-musl
cargo build --release --bin fluvio-run --target=x86_64-unknown-linux-musl
"""

[tasks.setup-musl.linux]
script = '''
which musl-gcc 2> /dev/null > /dev/null || {
    echo "Install musl-tools on your system!";
    exit 1
}
rustup target add x86_64-unknown-linux-musl
'''

[tasks.setup-musl.condition]
platforms = ["linux"]
