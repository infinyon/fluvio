extend = "Base.toml"

[tasks.install-github-release.mac]
script = '''
github-release --help 2> /dev/null || {
    go get github.com/github-release/github-release;
    ls $(go env GOPATH)/bin;
    cp $(go env GOPATH)/bin/github-release /usr/local/bin;
}
'''

[tasks.install-github-release.linux]
script = '''
github-release --help 2> /dev/null || {
    go get github.com/github-release/github-release;
    sudo cp $(go env GOPATH)/bin/github-release /usr/local/bin;
}
'''


[tasks.github-release-upload]
description = "Upload release binaries to Github"
category = "Publish"
dependencies = [
    "release-github-env",
    "install-github-release",
    "build-release",
    "github-release-create-pre-release",
]
script = '''
if [ -n "${GITHUB_RELEASE_FORCE}" ]; then
    github-release -v upload --user infinyon --repo fluvio --tag v${FLUVIO_VERSION} --name fluvio-v${FLUVIO_VERSION}-${TARGET} --file ./target/${TARGET}/release/fluvio ${GITHUB_RELEASE_FORCE}
else
    github-release -v upload --user infinyon --repo fluvio --tag v${FLUVIO_VERSION} --name fluvio-v${FLUVIO_VERSION}-${TARGET} --file ./target/${TARGET}/release/fluvio
fi
'''

[tasks.github-release-create-pre-release]
description = "Create Pre-release on Github"
category = "Publish"
dependencies = [
    "install-github-release",
]
script = '''
github-release -v release --user infinyon --repo fluvio --tag "v${FLUVIO_VERSION}" --name "v${FLUVIO_VERSION}" --pre-release || echo "creating pre-release on github may have failed"
'''

[tasks.release-github-env.linux]
env = { TARGET = "x86_64-unknown-linux-musl" }

[tasks.release-github-env.mac]
env = { TARGET = "x86_64-apple-darwin" }

[tasks.delete-github-release]
command = "github-release"
args = [
    "delete",
    "--user", "infinyon",
    "--repo", "fluvio",
    "--tag", "v${FLUVIO_VERSION}",
]
