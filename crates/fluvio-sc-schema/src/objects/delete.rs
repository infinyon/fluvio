//!
//! # Delete object
//!
//!

use std::fmt::Debug;

use dataplane::core::{Encoder, Decoder};
use dataplane::api::Request;
use fluvio_controlplane_metadata::k8_types::options::DeleteOptions;

use crate::{AdminSpec, ObjectDecoder};
use crate::Status;
use crate::AdminPublicApiKey;
use super::{ObjectApiEnum, ObjectApiDecode};

ObjectApiEnum!(DeleteRequest);

// This can be auto generated by enum derive later
#[derive(Debug, Default, Encoder, Decoder)]
pub struct DeleteRequest<S: AdminSpec>(S::DeleteKey);

impl<S> DeleteRequest<S>
where
    S: AdminSpec,
{
    pub fn key(self) -> S::DeleteKey {
        self.0
    }
}

impl Request<ObjectDecoder> for ObjectApiDeleteRequest {
    const API_KEY: u16 = AdminPublicApiKey::Delete as u16;
    const DEFAULT_API_VERSION: i16 = 1;
    type Response = Status;

    ObjectApiDecode!(DeleteRequest, ObjectDecoder);
}
