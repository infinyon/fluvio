//!
//! # Delete object
//!
//!

use std::fmt::Debug;

use dataplane::core::{Encoder,Decoder};
use dataplane::api::Request;


use crate::{AdminSpec, ObjectDecoder};
use crate::Status;
use crate::AdminPublicApiKey;
use super::{ObjectApiEnum,ObjectApiDecode};



ObjectApiEnum!(DeleteRequest);

// This can be auto generated by enum derive later
#[derive(Debug, Default,Encoder, Decoder)]
pub struct DeleteRequest<S: AdminSpec> {
    key: S::DeleteKey,
}



impl Request<ObjectDecoder> for ObjectApiDeleteRequest {
    const API_KEY: u16 = AdminPublicApiKey::Delete as u16;
    const DEFAULT_API_VERSION: i16 = 1;
    type Response = Status;

    ObjectApiDecode!(DeleteRequest,ObjectDecoder);
}

