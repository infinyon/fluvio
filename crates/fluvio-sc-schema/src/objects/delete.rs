//!
//! # Delete object
//!
//!

use std::fmt::Debug;

use anyhow::Result;

use fluvio_protocol::{Encoder, Decoder};
use fluvio_protocol::api::Request;

use crate::{DeletableAdminSpec};
use crate::Status;
use crate::AdminPublicApiKey;
use super::{COMMON_VERSION, TypeBuffer};

// This can be auto generated by enum derive later
#[derive(Debug, Default, Encoder, Decoder)]
pub struct ObjectApiDeleteRequest(TypeBuffer);

impl ObjectApiDeleteRequest {
    pub fn downcast<S>(&self) -> Result<Option<S::DeleteKey>>
    where
        S: DeletableAdminSpec,
    {
        self.0.downcast::<S, S::DeleteKey>()
    }
}

impl Request for ObjectApiDeleteRequest {
    const API_KEY: u16 = AdminPublicApiKey::Delete as u16;
    const MIN_API_VERSION: i16 = 1; // previous version
    const DEFAULT_API_VERSION: i16 = COMMON_VERSION;
    type Response = Status;
}
